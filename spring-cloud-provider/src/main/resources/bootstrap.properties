
server.port=2222
#页面显示json化
spring.jackson.serialization.indent_output=true


#参数用于定义服务续约任务的调用间隔时间，默认为30秒
eureka.instance.lease-renewal-interval-in-seconds=30
#参数用于定义服务实效的时间，默认为90秒
eureka.instance.lease-expiration-duration-in-seconds=90



#其中，通过eureka.client.serviceUrl.defaultZone参数指定服务注册中心，
#用于服务的注册与发现，再将spring.cloud.config.discovery.enabled参数设置为true，
#开启通过服务来访问Config Server的功能，
#最后利用spring.cloud.config.discovery.serviceId参数来指定Config Server注册的服务名。
#这里的spring.application.name和spring.cloud.config.profile如之前通过URI的方式访问时候一样，用来定位Git中的资源。
eureka.client.serviceUrl.defaultZone=http://localhost:1111/eureka/
spring.cloud.config.discovery.enabled=true
spring.cloud.config.discovery.serviceId=config-server
spring.cloud.config.profile=dev
spring.application.name=application
spring.cloud.config.label=master




# DB配置
# 主数据源，默认的
master.datasource.driverClassName=org.postgresql.Driver
master.datasource.url=jdbc:postgresql://rds52wlx664j6n8v96kdpublic.pg.rds.aliyuncs.com:3433/new_spider
master.datasource.username=dch
master.datasource.password=dch112233

# 更多数据源
custom.datasource.names=ds1,ds2
#custom.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
custom.datasource.ds1.driverClassName =org.postgresql.Driver
custom.datasource.ds1.url=jdbc:postgresql://10.10.11.195:5432/apollo_datacenter
custom.datasource.ds1.username=postgres
custom.datasource.ds1.password=Abc258Killsina
 
#custom.datasource.ds2.type=com.zaxxer.hikari.HikariDataSource
custom.datasource.ds2.driverClassName =org.postgresql.Driver
custom.datasource.ds2.url=jdbc:postgresql://10.10.11.237:5432/apollo_matadata
custom.datasource.ds2.username=postgres
custom.datasource.ds2.password=postgres
 
 
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
druid.initialSize=5
druid.minIdle=5
druid.maxActive=20
# 配置获取连接等待超时的时间
druid.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
druid.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
druid.minEvictableIdleTimeMillis=300000
druid.validationQuery=SELECT 1 FROM DUAL
druid.testWhileIdle=true
druid.testOnBorrow=false
druid.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
druid.poolPreparedStatements=true
druid.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
druid.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#druid.useGlobalDataSourceStat=true
